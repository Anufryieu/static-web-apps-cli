name: E2E

on: push

jobs:
  Install:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]
        node-version: [10.x, 12.x, 14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache central NPM modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      # Cache local node_modules to pass to testing jobs
      - name: Cache local node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ github.ref }}-
      - name: Install root dependencies
        env:
          CI: 1
        run: npm ci

  E2E:
    needs: Install
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        node-version: [10.x, 12.x, 14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Restore just local node_modules and the Cypress binary archives.
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-

      - name: Cache local node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # check the restored Cypress binary
      - name: Check binary
        run: |
          npx cypress cache path
          npx cypress cache list

      - name: e2e
        env:
          CI: 1
        run: |
          npm run e2e

  Artifacts:
    needs: E2E
    runs-on: ubuntu-16.04
    name: Artifacts
    steps:
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
